{"ast":null,"code":"var _jsxFileName = \"G:\\\\React_Apps\\\\PJ_06_Login-Handler\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/authContext/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    console.log(localStorage.getItem(\"userLoggedIn\"), isLoggedIn);\n    if (localStorage.getItem(\"userLoggedIn\") === \"1\") {\n      setIsLoggedIn(true);\n    }\n    console.log(isLoggedIn);\n  }, []);\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"userLoggedIn\", \"1\");\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  // isLoggedIn , onLogin, onLogout this we are passing to child components , and some properites\n  // we are just passing to children components (property drilling) so instead of this we can use Context to \n  // store this props and use where required.\n\n  console.log(isLoggedIn);\n  return (\n    /*#__PURE__*/\n    // <React.Fragment>\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogin: loginHandler,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n    // </React.Fragment>\n  );\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","console","log","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","Provider","value","onLogin","onLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/React_Apps/PJ_06_Login-Handler/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './components/authContext/AuthContext';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    console.log(localStorage.getItem(\"userLoggedIn\"), isLoggedIn);\n    if (localStorage.getItem(\"userLoggedIn\") === \"1\") {\n      setIsLoggedIn(true);\n    }\n    console.log(isLoggedIn)\n  }, [])\n\n\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"userLoggedIn\", \"1\");\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  // isLoggedIn , onLogin, onLogout this we are passing to child components , and some properites\n  // we are just passing to children components (property drilling) so instead of this we can use Context to \n  // store this props and use where required.\n\n  console.log(isLoggedIn);\n  return (\n    // <React.Fragment>\n    <AuthContext.Provider value={{\n      isLoggedIn: isLoggedIn, onLogin: loginHandler, onLogout: logoutHandler\n    }}>\n      {/* <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} /> */}\n      <MainHeader /> {/*Now we will not pass on props we can directly use it through useContext whre it required (avoid prop drilling) */}\n      <main>\n        {/* {!isLoggedIn && <Login onLogin={loginHandler} />} */}\n        {/* {isLoggedIn && <Home onLogout={logoutHandler} />} */}\n        {!isLoggedIn && <Login />}\n        {isLoggedIn && <Home />}\n      </main>\n    </AuthContext.Provider>\n    // </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAEL,UAAU,CAAC;IAC7D,IAAII,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,GAAG,EAAE;MAChDJ,aAAa,CAAC,IAAI,CAAC;IACrB;IACAC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMM,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAACK,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC;IACzC;IACA;IACAR,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BN,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;IACvCV,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB;IAAA;IACE;IACAH,OAAA,CAACF,WAAW,CAACiB,QAAQ;MAACC,KAAK,EAAE;QAC3Bb,UAAU,EAAEA,UAAU;QAAEc,OAAO,EAAER,YAAY;QAAES,QAAQ,EAAEL;MAC3D,CAAE;MAAAM,QAAA,gBAEAnB,OAAA,CAACH,UAAU;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eACfvB,OAAA;QAAAmB,QAAA,GAGG,CAAChB,UAAU,iBAAIH,OAAA,CAACL,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACxBpB,UAAU,iBAAIH,OAAA,CAACJ,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;IACtB;EAAA;AAEJ;AAACrB,EAAA,CA9CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}