{"ast":null,"code":"var _jsxFileName = \"G:\\\\React_Apps\\\\PJ_06_Login-Handler\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../authContext/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailreducerFn = (state, action) => {\n  if (action.type == \"emailUser_Input\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  } else if (action.type == \"emailBlur_effect\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  } else return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwrdreducerFn = (state, action) => {\n  if (action.type == \"pwdUser_Input\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  } else if (action.type == \"pwdBlur_effect\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  } else return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const ctx = useContext(AuthContext);\n  const emailRef = useRef();\n  const pswrdRef = useRef();\n  const [emailState, dispatchEmail] = useReducer(emailreducerFn, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwrdreducerFn, {\n    value: \"\",\n    isValid: null\n  });\n  const {\n    isValid: emailValidState\n  } = emailState;\n  const {\n    isValid: passwordValidState\n  } = passwordState;\n  useEffect(() => {\n    const timeinterval = setTimeout(() => {\n      console.log(\"validation\");\n      setFormIsValid(emailValidState && passwordValidState);\n    }, 500);\n    return () => {\n      console.log(\"clear effect\");\n      clearTimeout(timeinterval);\n    };\n  }, [emailValidState, passwordValidState]);\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"emailUser_Input\",\n      val: event.target.value\n    });\n    // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n\n    // setFormIsValid(emailValidState && passwordValidState) \n\n    //  when we try to change state value based on some other states which may not be contain latest values\n    //  so for this cases emailValidState and passwordValidSate is not latest one to avoid this cases will use useEffect which ensures\n    //  latest values.\n\n    dispatchPassword({\n      type: \"pwdUser_Input\",\n      val: event.target.value\n    });\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes('@'));\n    dispatchEmail({\n      type: \"emailBlur_effect\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: \"pwdBlur_effect\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    // props.onLogin(emailState.value,passwordState.value);\n    if (formIsValid) ctx.onLogin(emailState.value, passwordState.value);else if (!emailValidState) emailRef.current.focusInput();else if (!passwordValidState) pswrdRef.current.focusInput();\n    // else {\n    //   emailRef.current.focusInput(); //defined in Input bind to activate() to focus input field.\n    //   pswrdRef.current.focusInput();\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailRef,\n        isValid: emailState.isValid,\n        label: \"E-Mail\",\n        id: \"email\",\n        type: \"email\",\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: pswrdRef,\n        isValid: passwordState.isValid,\n        label: \"Password\",\n        id: \"password\",\n        type: \"password\",\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"9YcH1QEBtD5wCAdE5F8WVz9Jgvc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","Input","AuthContext","jsxDEV","_jsxDEV","emailreducerFn","state","action","type","value","val","isValid","includes","passwrdreducerFn","trim","length","Login","props","_s","formIsValid","setFormIsValid","ctx","emailRef","pswrdRef","emailState","dispatchEmail","passwordState","dispatchPassword","emailValidState","passwordValidState","timeinterval","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focusInput","className","login","children","onSubmit","ref","label","id","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["G:/React_Apps/PJ_06_Login-Handler/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../authContext/AuthContext';\n\nconst emailreducerFn = (state, action) => {\n  if (action.type == \"emailUser_Input\") { return { value: action.val, isValid: action.val.includes(\"@\") }; }\n  else if (action.type == \"emailBlur_effect\") {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  else\n    return { value: \"\", isValid: false };\n}\n\nconst passwrdreducerFn = (state, action) => {\n  if (action.type == \"pwdUser_Input\") { return { value: action.val, isValid: action.val.trim().length > 6 }; }\n  else if (action.type == \"pwdBlur_effect\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  else\n    return { value: \"\", isValid: false };\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const ctx = useContext(AuthContext);\n  const emailRef = useRef();\n  const pswrdRef = useRef();\n\n  const [emailState, dispatchEmail] = useReducer(emailreducerFn, { value: \"\", isValid: null });\n  const [passwordState, dispatchPassword] = useReducer(passwrdreducerFn, { value: \"\", isValid: null });\n\n  const { isValid: emailValidState } = emailState;\n  const { isValid: passwordValidState } = passwordState;\n\n  useEffect(() => {\n    const timeinterval = setTimeout(() => {\n      console.log(\"validation\");\n      setFormIsValid(\n        emailValidState && passwordValidState)\n    }\n      , 500)\n\n    return () => {\n      console.log(\"clear effect\");\n      clearTimeout(timeinterval);\n    }\n  }, [emailValidState, passwordValidState])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"emailUser_Input\", val: event.target.value });\n    // setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n\n    // setFormIsValid(emailValidState && passwordValidState) \n\n    //  when we try to change state value based on some other states which may not be contain latest values\n    //  so for this cases emailValidState and passwordValidSate is not latest one to avoid this cases will use useEffect which ensures\n    //  latest values.\n\n    dispatchPassword({ type: \"pwdUser_Input\", val: event.target.value });\n\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes('@'));\n    dispatchEmail({ type: \"emailBlur_effect\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: \"pwdBlur_effect\" });\n\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // props.onLogin(emailState.value,passwordState.value);\n    if (formIsValid)\n      ctx.onLogin(emailState.value, passwordState.value);\n    else if (!emailValidState)\n      emailRef.current.focusInput();\n    else if(!passwordValidState)\n       pswrdRef.current.focusInput();\n    // else {\n    //   emailRef.current.focusInput(); //defined in Input bind to activate() to focus input field.\n    //   pswrdRef.current.focusInput();\n    // }\n      \n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        {/* <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div> */}\n        <Input ref={emailRef} isValid={emailState.isValid} label=\"E-Mail\" id=\"email\" type=\"email\" value={emailState.value} onChange={emailChangeHandler} onBlur={validateEmailHandler}>\n        </Input>\n        {/* <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n         */}\n        <Input ref={pswrdRef} isValid={passwordState.isValid} label=\"Password\" id=\"password\" type=\"password\" value={passwordState.value} onChange={passwordChangeHandler} onBlur={validatePasswordHandler}>\n        </Input>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} >\n            {/* removed disabled property from Login btn and now focus on invalid values - disabled={!formIsValid} */}\n            Signup\n          </Button>\n          {/* Now we will create ref to input fields and based on validity of input field we will focus on input fields */}\n          {/* we will pass ref to Input Component */}\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}